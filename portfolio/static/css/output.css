/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties;
.visible {
  visibility: visible;
}
.static {
  position: static;
}
.block {
  display: block;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-none {
  --tw-border-style: none;
  border-style: none;
}
.px-2 {
  padding-inline: calc(var(--spacing) * 2);
}
.text-white {
  color: var(--color-white);
}
.filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
@import url("https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;500;700&display=swap");
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --font-weight-bold: 700;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --font-jetbrains: "JetBrains Mono", monospace;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities;
@layer base {
  body {
    background-color: var(--color-black);
    padding-inline: calc(var(--spacing) * 10);
    padding-block: calc(var(--spacing) * 10);
    font-family: var(--font-jetbrains);
  }
}
@layer components {
  ::-webkit-scrollbar {
    width: 3px;
    height: 3px;
  }
  ::-webkit-scrollbar:hover {
    width: 10px;
    height: 5px;
    background: #4d4d4d;
  }
  .menu {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    column-gap: calc(var(--spacing) * 5);
    padding-inline: calc(var(--spacing) * 4);
    color: #8c8c8c;
  }
  .menu_button {
    font-size: 27px;
  }
  .menu_button:hover {
    margin-inline: calc(var(--spacing) * 2);
    color: #e8e8e8;
    font-style: italic;
  }
  .content_container {
    height: 100dvh;
    overflow-y: auto;
    overscroll-behavior: auto;
    border-radius: 1em;
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: none;
    border-style: none;
    background-color: #111111;
    padding-inline: calc(var(--spacing) * 4);
  }
  .content_container h1 {
    padding-inline: calc(var(--spacing) * 6);
    font-size: 50px;
    color: #ffffff;
  }
  .content_container p {
    padding-inline: calc(var(--spacing) * 6);
    font-size: 30px;
    color: #B7B7B7;
  }
  .search_header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 2);
  }
  .search_header .filter_tag {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: none;
    border-style: none;
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    text-align: center;
    font-size: 18px;
    color: var(--color-white);
  }
  .button_container {
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    gap: calc(var(--spacing) * 7);
    padding: calc(var(--spacing) * 10);
  }
  .project_button_border {
    display: flex;
    height: 400px;
    justify-content: center;
    border-radius: 2em;
    border-style: var(--tw-border-style);
    border-width: 1px;
    background-color: #272727;
    padding: calc(var(--spacing) * 5);
  }
  .project_button {
    height: 100%;
    width: 100%;
  }
  .project_title {
    display: flex;
    height: calc(1/6 * 100%);
    align-items: center;
    justify-content: flex-start;
    gap: calc(var(--spacing) * 2);
    padding-inline: calc(var(--spacing) * 2);
  }
  .project_title .title {
    width: calc(5/6 * 100%);
    overflow-x: auto;
    font-size: 22px;
    color: var(--color-white);
  }
  .project_title .image_button {
    height: 100%;
    width: 100%;
  }
  .project_title .edit_button {
    font-size: 42px;
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-white);
  }
  .project_description {
    height: calc(2/3 * 100%);
    overflow-y: auto;
    padding: calc(var(--spacing) * 2);
    color: #B7B7B7;
  }
  .project_tags {
    display: flex;
    height: calc(1/6 * 100%);
    align-items: center;
    justify-content: flex-start;
    gap: calc(var(--spacing) * 2);
    overflow-x: auto;
    border-radius: 1em;
    border-style: var(--tw-border-style);
    border-width: 1px;
    --tw-border-style: none;
    border-style: none;
    background-color: #3A3A3A;
    padding: calc(var(--spacing) * 2);
  }
  .contacts {
    display: flex;
    justify-content: space-between;
    padding-inline: calc(var(--spacing) * 32);
  }
  .image_button {
    display: flex;
    height: calc(var(--spacing) * 24);
    width: calc(var(--spacing) * 36);
    align-items: center;
    justify-content: center;
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-font-weight: initial;
    }
  }
}
